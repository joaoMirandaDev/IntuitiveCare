{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Busca de Operadoras\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Resultados:\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.searchOperadoras && $options.searchOperadoras(...args)),\n    placeholder: \"Digite um termo para buscar\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.query]]), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.operadoras, operadora => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: operadora.CNPJ\n    }, [_createElementVNode(\"span\", null, _toDisplayString(operadora.CNPJ), 1 /* TEXT */), _createTextVNode(\" - \" + _toDisplayString(operadora.Razao_Social), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;;EACOA,EAAE,EAAC;AAAK;gEACXC,oBAA4B,YAAxB,qBAAmB;gEAKrBA,oBAAoB,YAAhB,aAAW;;;uBANnBC,oBAaM,OAbNC,UAaM,GAZJC,UAA4B,kBAE5BH,oBAA6F;+DAA7EI,WAAK;IAAGC,OAAK,yCAAEC,+DAAgB;IAAEC,WAAW,EAAC;iEAA7CH,WAAK,KAErBJ,oBAOM,cANJQ,UAAoB,EACpBR,oBAIK,gCAHHC,oBAEKQ,6BAFmBL,gBAAU,EAAvBM,SAAS;yBAApBT,oBAEK;MAFgCU,GAAG,EAAED,SAAS,CAACE;QAClDZ,oBAAiC,+BAAxBU,SAAS,CAACE,IAAI,mCAAU,KAAG,oBAAGF,SAAS,CAACG,YAAY","names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$data","onInput","$options","placeholder","_hoisted_3","_Fragment","operadora","key","CNPJ","Razao_Social"],"sourceRoot":"","sources":["/home/joao/Área de trabalho/Diversos/intuitiveCare-main/teste4_api/teste4/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Busca de Operadoras</h1>\n    \n    <input v-model=\"query\" @input=\"searchOperadoras\" placeholder=\"Digite um termo para buscar\" />\n    \n    <div>\n      <h2>Resultados:</h2>\n      <ul>\n        <li v-for=\"operadora in operadoras\" :key=\"operadora.CNPJ\">\n          <span>{{ operadora.CNPJ }}</span> - {{ operadora.Razao_Social }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      page: 1,   // Página atual\n      query: '', // Termo de busca\n      operadoras: [] // Lista de operadoras retornada da API\n    };\n  },\n  created() {\n    this.searchOperadoras();  // Chama a busca inicial ao criar o componente\n  },\n  methods: {\n    async searchOperadoras() {\n      try {\n        // Fazendo a requisição com a query e a página\n        const response = await axios.get(`http://localhost:1081/search?query=${this.query}&page=${this.page}`);\n        \n        console.log('Resposta recebida:', response.data);\n        \n        const parsedData = response.data.data || response.data;\n        \n        // Verifique se os dados são um array\n        if (Array.isArray(parsedData)) {\n          this.operadoras = parsedData;\n        } else {\n          console.log('Não é um array, dados retornados:', parsedData);\n          this.operadoras = [];\n        }\n      } catch (error) {\n        console.error(\"Erro ao buscar operadoras:\", error);\n        this.operadoras = [];\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n#app {\n  font-family: Arial, sans-serif;\n  padding: 20px;\n}\n\ninput {\n  padding: 10px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  width: 300px;\n}\n\nh2 {\n  margin-top: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}