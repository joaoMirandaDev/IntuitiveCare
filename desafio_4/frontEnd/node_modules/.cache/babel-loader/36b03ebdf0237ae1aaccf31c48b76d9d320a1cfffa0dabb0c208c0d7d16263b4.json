{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      page: 1,\n      query: '',\n      operadoras: []\n    };\n  },\n  created() {\n    this.searchOperadoras();\n  },\n  methods: {\n    async searchOperadoras() {\n      try {\n        const response = await axios.get(`http://localhost:1081/search?query=${this.query}&page=${this.page}`);\n        console.log('Resposta recebida:', response.data);\n        this.operadoras = response.data.results || response.data; // Ajuste conforme necessário\n      } catch (error) {\n        console.error(\"Erro ao buscar operadoras:\", error);\n        this.operadoras = [];\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAqBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,gBAAgB,EAAE;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgB,GAAG;MACvB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAE,sCAAqC,IAAI,CAACN,KAAM,SAAQ,IAAI,CAACD,IAAK,EAAC,CAAC;QACtGQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAACP,IAAI,CAAC;QAChD,IAAI,CAACG,UAAS,GAAII,QAAQ,CAACP,IAAI,CAACW,OAAM,IAAKJ,QAAQ,CAACP,IAAI,EAAG;MAC7D,EAAE,OAAOY,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,IAAI,CAACT,UAAS,GAAI,EAAE;MACtB;IACF;EACF;AACF,CAAC","names":["axios","name","data","page","query","operadoras","created","searchOperadoras","methods","response","get","console","log","results","error"],"sourceRoot":"","sources":["/home/joao/Área de trabalho/Diversos/intuitiveCare-main/teste4_api/teste4/src/App.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv\n  h1 Busca de Operadoras\n  input(v-model=\"query\" @input=\"searchOperadoras\" placeholder=\"Digite um termo para buscar\")\n  \n  div\n    h2 Resultados:\n    el-table(:data=\"operadoras\" border style=\"width: 100% \")\n      el-table-column(prop=\"Registro_ANS\" label=\"Registro ANS\")\n      el-table-column(prop=\"CNPJ\" label=\"CNPJ\" width=\"180\")\n      el-table-column(prop=\"Razao_Social\" label=\"Razão Social\")\n      el-table-column(prop=\"Telefone\" label=\"Telefone\")\n        template(#default=\"{ row }\")\n          span {{ '(' +row.DDD + ') ' + row.Telefone }}\n      el-table-column(label=\"Cidade\" )\n        template(#default=\"{ row }\")\n          span {{ row.UF + '/' + row.Cidade }}\n    <el-pagination layout=\"prev, pager, next\" :total=\"1000\" />\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      page: 1,\n      query: '', \n      operadoras: [] \n    };\n  },\n  created() {\n    this.searchOperadoras(); \n  },\n  methods: {\n    async searchOperadoras() {\n      try {\n        const response = await axios.get(`http://localhost:1081/search?query=${this.query}&page=${this.page}`);\n        console.log('Resposta recebida:', response.data);\n        this.operadoras = response.data.results || response.data;  // Ajuste conforme necessário\n      } catch (error) {\n        console.error(\"Erro ao buscar operadoras:\", error);\n        this.operadoras = [];\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n#app {\n  font-family: Arial, sans-serif;\n  padding: 20px;\n}\n\ninput {\n  padding: 10px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  width: 300px;\n}\n\nh2 {\n  margin-top: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}